import { useEffect, useState } from "react";

import type { NextPage } from "next";
import Head from "next/head";
import { ApolloClient, InMemoryCache, gql } from "@apollo/client";
import styles from "styles/Home.module.scss";

import Navigation from 'components/navigation/Navigation';


export async function getStaticProps() {
    return {
        props: {
            server: process.env.SERVER,
        },
    };
}

const Basics: NextPage = (props: any) => {
    const [data, setData] = useState<any[]>();

    useEffect(() => {
        async function getGraphQLData() {
            try {
                const client = new ApolloClient({
                    uri: `${props.server}/graphql`,
                    cache: new InMemoryCache(),
                });
                const result = await client.query({
                    query: gql`
                        query Query {
                            me {
                                username
                            }
                        }
                    `,
                });
                setData(result.data.me);
            } catch (error) {
                console.log("error");
            }
        }

        getGraphQLData();
    }, [props.server]);

    return (
        <div className={styles.container}>
            <Head>
                <title>client</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Navigation />
            <h1>graph ql test</h1>
            <p>{JSON.stringify(data)} </p>
        </div>
    );
};

export default Basics;

//
